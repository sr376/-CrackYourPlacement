class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head == null || head.next == null){
            return true;
        }
        ListNode slow = head;
        ListNode fast = head;
        while(fast!=null && fast.next!=null){
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode reversedSecondHalf = reverseList(slow);
        ListNode current = head;
        while(reversedSecondHalf!=null){
            if(current.val!=reversedSecondHalf.val){
                return false;
            }
            current = current.next;
            reversedSecondHalf = reversedSecondHalf.next;
        }
        return true;
    }
    private ListNode reverseList(ListNode head) {
        ListNode prev = null;
        while (head != null) {
            ListNode next = head.next;
            head.next = prev;
            prev = head;
            head = next;
        }
        return prev;
    }
}
