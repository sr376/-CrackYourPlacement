class Solution {
   
    Node flatten(Node root) {
        // code here
        if(root == null || root.next == null) return root;
        Node mergeHead = flatten(root.next);
        return mergeList(root,mergeHead);
    }
    
    public Node mergeList(Node l1, Node l2)
    {
     Node result = new Node(-1);
     Node temp = result;
     
     while(l1 != null && l2 != null)
     {
      if(l1.data < l2.data)
      {
       temp.bottom = l1;
       l1 = l1.bottom;
      }
      else
      {
        temp.bottom = l2;
        l2 = l2.bottom;
      }
      temp = temp.bottom;
     }
     
     while(l1 != null)
     {
      temp.bottom = l1;
      l1 = l1.bottom; 
      temp = temp.bottom;
     }
     
     while(l2 != null)
     {
      temp.bottom = l2;
      l2 = l2.bottom;
      temp = temp.bottom;
     }
     return result.bottom;
    }
}
