class Solution{
    static int equalPartition(int N, int arr[])
    {
        int sum = 0;
        for(int i: arr){
            sum += i;
        }
        
        
        if(sum % 2 != 0) return 0;
        int dp[][] = new int[N][sum+1];
        
        for(int a[] : dp){
            Arrays.fill(a,-1);
        }
        
        return rec(arr,0,sum,0,dp);
    }
    
    public static int rec(int arr[],int i, int sum,int r_s,int dp[][]){
        
        if(r_s*2 > sum) return 0;
        
        if(i == arr.length){
            if(sum  == 2*r_s) return 1;
            return 0;
        }
        
        if(dp[i][r_s] != -1){
            return dp[i][r_s];
        }
        
        //take
        int l = rec(arr,i+1,sum,r_s+arr[i],dp);
        //not take
        int r = rec(arr,i+1,sum,r_s,dp);
        
        if(l == 1 || r == 1) dp[i][r_s] = 1;
        else dp[i][r_s] = 0;
        
        return dp[i][r_s];
    }
    
}
